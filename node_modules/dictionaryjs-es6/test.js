var Dictionary = require("./Dictionary.js");
//to test using npm package (npm install dictionaryjs-es6):
//var Dictionary = require("dictionaryjs-es6");


var suspend = require("suspend"),
	resume = suspend.resume;


var collection = new Dictionary(resume);
collection["foo"] = "bar";
collection["its a me"] = "mario";
collection["hello"] = "bye";


suspend(function*() {
	
	console.log("Collection contains:");

	yield collection.asyncForEach(function(index,item,cbNext) {
		console.log("*",index,item);
		cbNext();
	});

	console.log("-----");
	console.log("General Tests:");
	
	
	console.log("its a me=",collection["its a me"]);
	
	collection.set("its a me","Luigi");
	
	console.log("its a me=",collection["its a me"]);
	
	//examples using dot operator:
	collection.hello = "hey hey";
	console.log("hello=",collection.hello);
	

	console.log("test=",collection.getDefault("test","not found"));
	
	console.log("has test?",collection.has("test"));
	console.log("hasOwnProperty test?",collection.hasOwnProperty("test"));
	
		
	console.log("has hello?",collection.has("hello"));
	console.log("hasOwnProperty hello?",collection.hasOwnProperty("hello"));
	
	//three ways to add entries:
	collection.test = "testing";
	console.log("test added");

	collection["key"] = "success";
	console.log("key added");

	collection.set("feeling","good");
	console.log("feeling added");


	//two ways to remove entries:

	collection.remove("hello");
	console.log("hello removed");

	delete collection.foo;
	console.log("foo removed");
	
	
	console.log("-----");
	console.log("Blocking loop:");
	
	collection.forEach(function(index,item) {
		console.log("  "+ index + ": ", item);
	});
	

	console.log("-----");
	
	console.log("Collection size: " + collection.size());

	console.log("-----");
	console.log("Looping using iterator:");


	for (let item of collection) {
		console.log("Iterator:",item);
	}
	
	
	console.log("-----");
	
	console.log("Emptying collection:");

	yield collection.asyncEmpty();

	console.log("Empty completed.");
	
	console.log("Collection size: " + collection.size());

})();
